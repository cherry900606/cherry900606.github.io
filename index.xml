<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CC&#39;s blog</title>
    <link>https://cherry900606.github.io/</link>
    <description>Recent content on CC&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 13 Jan 2022 23:00:33 +0800</lastBuildDate><atom:link href="https://cherry900606.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>論文閱讀 A Hybrid Markov and LSTM Model for Indoor Location Prediction</title>
      <link>https://cherry900606.github.io/posts/a_hybrid_markov_and_lstm_model_for_indoor_location_prediction/</link>
      <pubDate>Thu, 13 Jan 2022 23:00:33 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/a_hybrid_markov_and_lstm_model_for_indoor_location_prediction/</guid>
      <description>Introduction 隨著終端設備的普及，室內的移動軌跡資料也比以往更加容易取得。這些資料能夠讓店家能針對個別使用者推送個人化訊息，藉由過去的歷史資料來預測使用</description>
    </item>
    
    <item>
      <title>不定長度數字序列的分類問題</title>
      <link>https://cherry900606.github.io/posts/seq_with_different_length/</link>
      <pubDate>Thu, 09 Dec 2021 22:11:58 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/seq_with_different_length/</guid>
      <description>題目敘述 從 binary malware file 轉成 number sequence，長度不一。最長的數字序列長度為14231552、最短為32。訓練資料共有3604筆，label數為2</description>
    </item>
    
    <item>
      <title>Nachos hw1</title>
      <link>https://cherry900606.github.io/posts/nachos_hw1/</link>
      <pubDate>Wed, 13 Oct 2021 10:48:33 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/nachos_hw1/</guid>
      <description>安裝 sudo apt install csh g++ git clone https://gitlab.com/connlabtw21/nachos2021.git cd NachOS2021 sudo cp -r usr / cd code make make下去後會噴出很多訊息，這是正常的，等待幾分鐘後即結束。 Testing 測試是否下載成功。 cd userprog ./nachos -e ../test/test1 範例──</description>
    </item>
    
    <item>
      <title>CDMC2021 task3</title>
      <link>https://cherry900606.github.io/posts/cdmc2021_task3/</link>
      <pubDate>Sun, 10 Oct 2021 14:18:02 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/cdmc2021_task3/</guid>
      <description>目標 因為跟syscall很相似，我就用了相近的方法處理，不過實作細節略有不同。 整體而言，都是找出出現過的string類型，依照出現次數進行預</description>
    </item>
    
    <item>
      <title>Keras 筆記</title>
      <link>https://cherry900606.github.io/posts/keras_note/</link>
      <pubDate>Mon, 20 Sep 2021 22:34:47 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/keras_note/</guid>
      <description>常用import from keras.models import Sequential from keras.layers.core import Dense, Dropout, Activation from keras.layers import Conv2D, MaxPooling2D, Flatten, Conv1D, MaxPooling1D from keras.utils import np_utils from tensorflow.keras.optimizers import SGD, Adam define model model = Sequential() model.add(Dense(input_dim=28 * 28, units=689, activation=&amp;#39;relu&amp;#39;)) model.add(Dropout(0.7)) model.add(Dense(units=689, activation=&amp;#39;relu&amp;#39;)) model.add(Dropout(0.7)) model.add(Dense(units=10, activation=&amp;#39;softmax&amp;#39;)) input layer 需要設定input_dim或者in</description>
    </item>
    
    <item>
      <title>機器學習基石 作業一</title>
      <link>https://cherry900606.github.io/posts/ml_foundation_hw1/</link>
      <pubDate>Sun, 19 Sep 2021 13:25:40 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/ml_foundation_hw1/</guid>
      <description>Questions 15~17 根據講義的演算法進行實作: 資料前處理 import numpy as np data = np.array([i.strip().split() for i in open(&amp;#34;./data.dat&amp;#34;).readlines()]) X_train = data[:, :4] Y_train = data[:, -1] xzero = np.ones((X_train.shape[0], 1)) X_train = np.concatenate((xzero, X_train), axis=1).astype(&amp;#39;float&amp;#39;) Y_train = Y_train.astype(&amp;#39;float&amp;#39;) 會用到的函式 def sign(x): if x &amp;lt;=0 : return -1 else: return 1 def _shuffle(X,</description>
    </item>
    
    <item>
      <title>在hugo hermit主題增加分頁功能</title>
      <link>https://cherry900606.github.io/posts/pagination/</link>
      <pubDate>Sat, 11 Sep 2021 11:53:57 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/pagination/</guid>
      <description>根據這篇文章的說明，可以在hugo的hermit主題自行增加分頁功能，不然hermit本身不會換頁。 我在「在對應的CSS樣式文件中添加以下」</description>
    </item>
    
    <item>
      <title>syscall</title>
      <link>https://cherry900606.github.io/posts/syscall/</link>
      <pubDate>Sun, 05 Sep 2021 14:25:03 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/syscall/</guid>
      <description>目標 閱讀README.txt，裡面提到用label.txt內有列出的檔案即可。 label.txt的內容分為兩部分: 檔案名稱與對應的malwa</description>
    </item>
    
    <item>
      <title>Pytorch MNIST 筆記</title>
      <link>https://cherry900606.github.io/posts/pytorch_cnn/</link>
      <pubDate>Mon, 23 Aug 2021 14:56:12 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/pytorch_cnn/</guid>
      <description>流程 load library read data and pre-processing(set parameters, create dataloader) define network structure(set model, set loss function, set optimizer) training gradient 歸零 predict 計算loss backward 更新step testing 程式 import torch import torch.nn as nn import torch.nn.functional as F import torch.optim as optim from torchvision import datasets, transforms import torch.utils.data as data %matplotlib inline import matplotlib.pyplot as plt</description>
    </item>
    
    <item>
      <title>李宏毅機器學習2020_hw2</title>
      <link>https://cherry900606.github.io/posts/ml_hw2/</link>
      <pubDate>Mon, 16 Aug 2021 14:01:22 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/ml_hw2/</guid>
      <description>範例code preparing data X_train_fpath = &amp;#39;./data/X_train&amp;#39; Y_train_fpath = &amp;#39;./data/Y_train&amp;#39; X_test_fpath = &amp;#39;./data/X_test&amp;#39; output_fpath = &amp;#39;./output_{}.csv&amp;#39; # Parse csv files to numpy array with open(X_train_fpath) as f: next(f) X_train = np.array([line.strip(&amp;#39;\n&amp;#39;).split(&amp;#39;,&amp;#39;)[1:] for line in f], dtype = float) with open(Y_train_fpath) as f: next(f) Y_train = np.array([line.strip(&amp;#39;\n&amp;#39;).split(&amp;#39;,&amp;#39;)[1] for line in f], dtype = float) with open(X_test_fpath) as f: next(f) X_test = np.array([line.strip(&amp;#39;\n&amp;#39;).split(&amp;#39;,&amp;#39;)[1:] for line in f], dtype</description>
    </item>
    
  </channel>
</rss>
