<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CC&#39;s blog</title>
    <link>https://cherry900606.github.io/</link>
    <description>Recent content on CC&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 10 Dec 2022 22:40:57 +0800</lastBuildDate><atom:link href="https://cherry900606.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>機器學習與資訊安全之應用 期末Project</title>
      <link>https://cherry900606.github.io/posts/ml_security_final/</link>
      <pubDate>Sat, 10 Dec 2022 22:40:57 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/ml_security_final/</guid>
      <description>說明 本篇文章紀錄我在「機器學習與資訊安全之應用」課程的期末作業內容。 期末作業的要求是實作在 malware detection 上的對抗式攻擊(adversarial atta</description>
    </item>
    
    <item>
      <title>機器學習與資訊安全之應用 期中Project</title>
      <link>https://cherry900606.github.io/posts/ml_security/</link>
      <pubDate>Sat, 10 Dec 2022 20:28:28 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/ml_security/</guid>
      <description>說明 本篇文章紀錄我在「機器學習與資訊安全之應用」課程的期中作業內容。 期中作業的內容為實作以機器學習中的 few-shot learning 來進行惡意軟體的偵測(malwar</description>
    </item>
    
    <item>
      <title>實作後門攻擊</title>
      <link>https://cherry900606.github.io/posts/implement_backdoor_by_shap/</link>
      <pubDate>Tue, 07 Jun 2022 12:13:23 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/implement_backdoor_by_shap/</guid>
      <description>簡介 這次我用在論文閱讀中學到的方法練習實作後門攻擊。使用的是部份的 EMBER 資料集，包含 9999 筆資料，其中前 5000 筆的 label 是 0 (benign),其餘是 1 (ma</description>
    </item>
    
    <item>
      <title>Adversarial attack(對抗式攻擊)</title>
      <link>https://cherry900606.github.io/posts/adversarial_attack/</link>
      <pubDate>Sun, 05 Jun 2022 18:32:56 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/adversarial_attack/</guid>
      <description>對抗式攻擊(adversarial attack)是透過在input加上細微的擾動，讓模型做出錯誤的判斷，被攻擊的模型卻可能對錯誤的預測有高度</description>
    </item>
    
    <item>
      <title>Compiler 作業二：yacc</title>
      <link>https://cherry900606.github.io/posts/compiler_hw2/</link>
      <pubDate>Sat, 14 May 2022 11:58:18 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/compiler_hw2/</guid>
      <description>yacc 基本架構 %{ // part 1 %} // part 2 %% // part 3 %% // part 4 part1 跟 lex 一樣，include 需要用到的 file，以及一些宣告 part2 列出所有 termial 的 token、non-ter</description>
    </item>
    
    <item>
      <title>Compiler 作業一：lex</title>
      <link>https://cherry900606.github.io/posts/compiler_hw1/</link>
      <pubDate>Sat, 14 May 2022 11:21:12 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/compiler_hw1/</guid>
      <description>lex 的基本架構 %{ // part 1 %} // part 2 %% // part 3 %% // part 4 part1 可以 include 用到的 library part2 用 regular grammar 定義 token part3 寫對 token 要做什麼動作 part4 是 optional，可以自定義 main()並</description>
    </item>
    
    <item>
      <title>Disjoint Set Union(DSU) 筆記</title>
      <link>https://cherry900606.github.io/posts/dsu/</link>
      <pubDate>Mon, 28 Feb 2022 22:10:37 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/dsu/</guid>
      <description>簡介 我們可能會有好多個元素 (element) 分別屬於不同的群體 (set)，透過了解元素 A 跟元素 B、元素 C 跟元素 D 誰跟誰有關，隨時依照需求更新並建立 element 間彼此的</description>
    </item>
    
    <item>
      <title>論文閱讀 Explanation-Guided Backdoor Poisoning Attacks Against Malware Classifiers</title>
      <link>https://cherry900606.github.io/posts/explanation-guided_backdoor_poisoning_attacks_against_malware_classifiers/</link>
      <pubDate>Sat, 26 Feb 2022 13:39:01 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/explanation-guided_backdoor_poisoning_attacks_against_malware_classifiers/</guid>
      <description>Introduction (i) 為了取得多元、大量的樣本，相關企業允許使用者上傳資料，作為訓練模型的依據，這可能成為攻擊的目標。 (ii) 提出如何在不針對特定模型的 feature-based 分類器上製</description>
    </item>
    
    <item>
      <title>Opencv 自救筆記</title>
      <link>https://cherry900606.github.io/posts/opencv_note/</link>
      <pubDate>Sat, 26 Feb 2022 11:46:36 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/opencv_note/</guid>
      <description>week1 安裝測試 #include&amp;lt;opencv2/opencv.hpp&amp;gt;using namespace cv; int main() { Mat img = imread(&amp;#34;Lenna.jpg&amp;#34;); imshow(&amp;#34;Hello World!&amp;#34;, img); waitKey(); } 使用 imread() 來讀入圖片，存到名為 img 的 Mat 基本資料型態。 imshow() 把 img 顯示成圖片，並且設定視窗標題成特定的名稱。 waitKey() 會等</description>
    </item>
    
    <item>
      <title>零錢問題</title>
      <link>https://cherry900606.github.io/posts/coin_problem/</link>
      <pubDate>Sat, 19 Feb 2022 13:33:31 +0800</pubDate>
      
      <guid>https://cherry900606.github.io/posts/coin_problem/</guid>
      <description>簡介 零錢問題是動態規劃(dynamic programming, 簡稱dp)常見的問題之一，題目敘述可能是問有幾 n 錢幣的情況下，付 m 元有幾種組合，或者付 m 元所需要的最</description>
    </item>
    
  </channel>
</rss>
